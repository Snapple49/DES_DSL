/*
 * generated by Xtext 2.10.0
 */
grammar InternalRobotDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package des.missionrobot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package des.missionrobot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import des.missionrobot.services.RobotDSLGrammarAccess;

}
@parser::members {
	private RobotDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(RobotDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMissions
entryRuleMissions
:
{ before(grammarAccess.getMissionsRule()); }
	 ruleMissions
{ after(grammarAccess.getMissionsRule()); } 
	 EOF 
;

// Rule Missions
ruleMissions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionsAccess().getGroup()); }
		(rule__Missions__Group__0)
		{ after(grammarAccess.getMissionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMission
entryRuleMission
:
{ before(grammarAccess.getMissionRule()); }
	 ruleMission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule Mission
ruleMission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoal
entryRuleGoal
:
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoalAccess().getGroup()); }
		(rule__Goal__Group__0)
		{ after(grammarAccess.getGoalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistance
entryRuleDistance
:
{ before(grammarAccess.getDistanceRule()); }
	 ruleDistance
{ after(grammarAccess.getDistanceRule()); } 
	 EOF 
;

// Rule Distance
ruleDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceAccess().getGroup()); }
		(rule__Distance__Group__0)
		{ after(grammarAccess.getDistanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlag
entryRuleFlag
:
{ before(grammarAccess.getFlagRule()); }
	 ruleFlag
{ after(grammarAccess.getFlagRule()); } 
	 EOF 
;

// Rule Flag
ruleFlag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlagAccess().getNameAssignment()); }
		(rule__Flag__NameAssignment)
		{ after(grammarAccess.getFlagAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirection
entryRuleDirection
:
{ before(grammarAccess.getDirectionRule()); }
	 ruleDirection
{ after(grammarAccess.getDirectionRule()); } 
	 EOF 
;

// Rule Direction
ruleDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionAccess().getDirAssignment()); }
		(rule__Direction__DirAssignment)
		{ after(grammarAccess.getDirectionAccess().getDirAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpeed
entryRuleSpeed
:
{ before(grammarAccess.getSpeedRule()); }
	 ruleSpeed
{ after(grammarAccess.getSpeedRule()); } 
	 EOF 
;

// Rule Speed
ruleSpeed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpeedAccess().getSpeedAssignment()); }
		(rule__Speed__SpeedAssignment)
		{ after(grammarAccess.getSpeedAccess().getSpeedAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArmOp
entryRuleArmOp
:
{ before(grammarAccess.getArmOpRule()); }
	 ruleArmOp
{ after(grammarAccess.getArmOpRule()); } 
	 EOF 
;

// Rule ArmOp
ruleArmOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArmOpAccess().getOpTypeAssignment()); }
		(rule__ArmOp__OpTypeAssignment)
		{ after(grammarAccess.getArmOpAccess().getOpTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSound
entryRuleSound
:
{ before(grammarAccess.getSoundRule()); }
	 ruleSound
{ after(grammarAccess.getSoundRule()); } 
	 EOF 
;

// Rule Sound
ruleSound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundAccess().getSoundNameAssignment()); }
		(rule__Sound__SoundNameAssignment)
		{ after(grammarAccess.getSoundAccess().getSoundNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getSensorTypeAssignment()); }
		(rule__Sensor__SensorTypeAssignment)
		{ after(grammarAccess.getSensorAccess().getSensorTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getColorNameAssignment()); }
		(rule__Color__ColorNameAssignment)
		{ after(grammarAccess.getColorAccess().getColorNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool
entryRuleBool
:
{ before(grammarAccess.getBoolRule()); }
	 ruleBool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule Bool
ruleBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolAccess().getBoolTypeAssignment()); }
		(rule__Bool__BoolTypeAssignment)
		{ after(grammarAccess.getBoolAccess().getBoolTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getNOTAssignment()); }
		(rule__Negation__NOTAssignment)
		{ after(grammarAccess.getNegationAccess().getNOTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DirectionVal
ruleDirectionVal
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionValAccess().getAlternatives()); }
		(rule__DirectionVal__Alternatives)
		{ after(grammarAccess.getDirectionValAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SpeedVal
ruleSpeedVal
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedValAccess().getAlternatives()); }
		(rule__SpeedVal__Alternatives)
		{ after(grammarAccess.getSpeedValAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArmOpType
ruleArmOpType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmOpTypeAccess().getAlternatives()); }
		(rule__ArmOpType__Alternatives)
		{ after(grammarAccess.getArmOpTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SoundName
ruleSoundName
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundNameAccess().getAlternatives()); }
		(rule__SoundName__Alternatives)
		{ after(grammarAccess.getSoundNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SensorType
ruleSensorType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypeAccess().getAlternatives()); }
		(rule__SensorType__Alternatives)
		{ after(grammarAccess.getSensorTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ColorName
ruleColorName
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorNameAccess().getAlternatives()); }
		(rule__ColorName__Alternatives)
		{ after(grammarAccess.getColorNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BoolType
ruleBoolType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolTypeAccess().getAlternatives()); }
		(rule__BoolType__Alternatives)
		{ after(grammarAccess.getBoolTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_0()); }
		(rule__Action__Group_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1()); }
		(rule__Action__Group_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_2()); }
		(rule__Action__Group_2__0)
		{ after(grammarAccess.getActionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_3()); }
		(rule__Action__Group_3__0)
		{ after(grammarAccess.getActionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_4()); }
		(rule__Action__Group_4__0)
		{ after(grammarAccess.getActionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getCentAssignment_5()); }
		(rule__Action__CentAssignment_5)
		{ after(grammarAccess.getActionAccess().getCentAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_1_2_0()); }
		(rule__Action__Group_1_2_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1_2_1()); }
		(rule__Action__Group_1_2_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getFlagAssignment_2_0()); }
		(rule__Trigger__FlagAssignment_2_0)
		{ after(grammarAccess.getTriggerAccess().getFlagAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_2_1()); }
		(rule__Trigger__Group_2_1__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_2_1_1_0()); }
		(rule__Trigger__Group_2_1_1_0__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_2_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_2_1_1_1()); }
		(rule__Trigger__Group_2_1_1_1__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_2_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_2_1_1_2()); }
		(rule__Trigger__Group_2_1_1_2__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_2_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionVal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionValAccess().getFORWARDEnumLiteralDeclaration_0()); }
		('forward')
		{ after(grammarAccess.getDirectionValAccess().getFORWARDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionValAccess().getBACKWARDEnumLiteralDeclaration_1()); }
		('backward')
		{ after(grammarAccess.getDirectionValAccess().getBACKWARDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionValAccess().getLEFTEnumLiteralDeclaration_2()); }
		('left')
		{ after(grammarAccess.getDirectionValAccess().getLEFTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionValAccess().getRIGHTEnumLiteralDeclaration_3()); }
		('right')
		{ after(grammarAccess.getDirectionValAccess().getRIGHTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpeedVal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedValAccess().getHIGHEnumLiteralDeclaration_0()); }
		('high')
		{ after(grammarAccess.getSpeedValAccess().getHIGHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpeedValAccess().getMEDEnumLiteralDeclaration_1()); }
		('medium')
		{ after(grammarAccess.getSpeedValAccess().getMEDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpeedValAccess().getLOWEnumLiteralDeclaration_2()); }
		('low')
		{ after(grammarAccess.getSpeedValAccess().getLOWEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArmOpType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmOpTypeAccess().getUPEnumLiteralDeclaration_0()); }
		('raise')
		{ after(grammarAccess.getArmOpTypeAccess().getUPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArmOpTypeAccess().getDOWNEnumLiteralDeclaration_1()); }
		('lower')
		{ after(grammarAccess.getArmOpTypeAccess().getDOWNEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundNameAccess().getBUZZEnumLiteralDeclaration_0()); }
		('buzz')
		{ after(grammarAccess.getSoundNameAccess().getBUZZEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSoundNameAccess().getFANFAREEnumLiteralDeclaration_1()); }
		('fanfare')
		{ after(grammarAccess.getSoundNameAccess().getFANFAREEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypeAccess().getCOLOREnumLiteralDeclaration_0()); }
		('Color')
		{ after(grammarAccess.getSensorTypeAccess().getCOLOREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getLEFTLIGHTEnumLiteralDeclaration_1()); }
		('LeftLight')
		{ after(grammarAccess.getSensorTypeAccess().getLEFTLIGHTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getRIGHTLIGHTEnumLiteralDeclaration_2()); }
		('RightLight')
		{ after(grammarAccess.getSensorTypeAccess().getRIGHTLIGHTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getBACKUSEnumLiteralDeclaration_3()); }
		('RearHeight')
		{ after(grammarAccess.getSensorTypeAccess().getBACKUSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getFRONTUSEnumLiteralDeclaration_4()); }
		('FrontDistance')
		{ after(grammarAccess.getSensorTypeAccess().getFRONTUSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getLEFTTOUCHEnumLiteralDeclaration_5()); }
		('LeftTouch')
		{ after(grammarAccess.getSensorTypeAccess().getLEFTTOUCHEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getRIGHTTOUCHEnumLiteralDeclaration_6()); }
		('RightTouch')
		{ after(grammarAccess.getSensorTypeAccess().getRIGHTTOUCHEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getSensorTypeAccess().getGYROEnumLiteralDeclaration_7()); }
		('Gyro')
		{ after(grammarAccess.getSensorTypeAccess().getGYROEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorNameAccess().getREDEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getColorNameAccess().getREDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorNameAccess().getWHITEEnumLiteralDeclaration_1()); }
		('white')
		{ after(grammarAccess.getColorNameAccess().getWHITEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorNameAccess().getBLACKEnumLiteralDeclaration_2()); }
		('black')
		{ after(grammarAccess.getColorNameAccess().getBLACKEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorNameAccess().getGREENEnumLiteralDeclaration_3()); }
		('green')
		{ after(grammarAccess.getColorNameAccess().getGREENEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorNameAccess().getBLUEEnumLiteralDeclaration_4()); }
		('blue')
		{ after(grammarAccess.getColorNameAccess().getBLUEEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolTypeAccess().getLEnumLiteralDeclaration_0()); }
		('less')
		{ after(grammarAccess.getBoolTypeAccess().getLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolTypeAccess().getGEnumLiteralDeclaration_1()); }
		('greater')
		{ after(grammarAccess.getBoolTypeAccess().getGEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoolTypeAccess().getANDEnumLiteralDeclaration_2()); }
		('and')
		{ after(grammarAccess.getBoolTypeAccess().getANDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoolTypeAccess().getOREnumLiteralDeclaration_3()); }
		('or')
		{ after(grammarAccess.getBoolTypeAccess().getOREnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBoolTypeAccess().getTRUEEnumLiteralDeclaration_4()); }
		('true')
		{ after(grammarAccess.getBoolTypeAccess().getTRUEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBoolTypeAccess().getFALSEEnumLiteralDeclaration_5()); }
		('false')
		{ after(grammarAccess.getBoolTypeAccess().getFALSEEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Missions__Group__0__Impl
	rule__Missions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionsAccess().getMissionsetKeyword_0()); }
	'Missionset'
	{ after(grammarAccess.getMissionsAccess().getMissionsetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Missions__Group__1__Impl
	rule__Missions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionsAccess().getNameAssignment_1()); }
	(rule__Missions__NameAssignment_1)
	{ after(grammarAccess.getMissionsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Missions__Group__2__Impl
	rule__Missions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionsAccess().getMissionsKeyword_2()); }
	'Missions:'
	{ after(grammarAccess.getMissionsAccess().getMissionsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Missions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMissionsAccess().getMissionListAssignment_3()); }
		(rule__Missions__MissionListAssignment_3)
		{ after(grammarAccess.getMissionsAccess().getMissionListAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMissionsAccess().getMissionListAssignment_3()); }
		(rule__Missions__MissionListAssignment_3)*
		{ after(grammarAccess.getMissionsAccess().getMissionListAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
	'Mission'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getNameAssignment_1()); }
	(rule__Mission__NameAssignment_1)
	{ after(grammarAccess.getMissionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFlagsKeyword_2()); }
	'Flags:'
	{ after(grammarAccess.getMissionAccess().getFlagsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
	rule__Mission__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFlagsListAssignment_3()); }
	(rule__Mission__FlagsListAssignment_3)*
	{ after(grammarAccess.getMissionAccess().getFlagsListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__4__Impl
	rule__Mission__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTasksKeyword_4()); }
	'Tasks:'
	{ after(grammarAccess.getMissionAccess().getTasksKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__5__Impl
	rule__Mission__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMissionAccess().getTaskListAssignment_5()); }
		(rule__Mission__TaskListAssignment_5)
		{ after(grammarAccess.getMissionAccess().getTaskListAssignment_5()); }
	)
	(
		{ before(grammarAccess.getMissionAccess().getTaskListAssignment_5()); }
		(rule__Mission__TaskListAssignment_5)*
		{ after(grammarAccess.getMissionAccess().getTaskListAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__6__Impl
	rule__Mission__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGoalKeyword_6()); }
	'Goal:'
	{ after(grammarAccess.getMissionAccess().getGoalKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGoalAssignment_7()); }
	(rule__Mission__GoalAssignment_7)
	{ after(grammarAccess.getMissionAccess().getGoalAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__0__Impl
	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getGroup_0()); }
	(rule__Goal__Group_0__0)?
	{ after(grammarAccess.getGoalAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__1__Impl
	rule__Goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getTimeoutAssignment_1()); }
	(rule__Goal__TimeoutAssignment_1)?
	{ after(grammarAccess.getGoalAccess().getTimeoutAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getGroup_2()); }
	(rule__Goal__Group_2__0)?
	{ after(grammarAccess.getGoalAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_0__0__Impl
	rule__Goal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getConditionKeyword_0_0()); }
	'Condition:'
	{ after(grammarAccess.getGoalAccess().getConditionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGoalAccess().getGoalEventsAssignment_0_1()); }
		(rule__Goal__GoalEventsAssignment_0_1)
		{ after(grammarAccess.getGoalAccess().getGoalEventsAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getGoalAccess().getGoalEventsAssignment_0_1()); }
		(rule__Goal__GoalEventsAssignment_0_1)*
		{ after(grammarAccess.getGoalAccess().getGoalEventsAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2__0__Impl
	rule__Goal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getActionsKeyword_2_0()); }
	'Actions:'
	{ after(grammarAccess.getGoalAccess().getActionsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGoalAccess().getFinishActionsAssignment_2_1()); }
		(rule__Goal__FinishActionsAssignment_2_1)
		{ after(grammarAccess.getGoalAccess().getFinishActionsAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getGoalAccess().getFinishActionsAssignment_2_1()); }
		(rule__Goal__FinishActionsAssignment_2_1)*
		{ after(grammarAccess.getGoalAccess().getFinishActionsAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task:'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getPriorityKeyword_2()); }
	'priority:'
	{ after(grammarAccess.getTaskAccess().getPriorityKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getPrioAssignment_3()); }
	(rule__Task__PrioAssignment_3)
	{ after(grammarAccess.getTaskAccess().getPrioAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_4()); }
	(rule__Task__Group_4__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getActionsKeyword_5()); }
	'Actions:'
	{ after(grammarAccess.getTaskAccess().getActionsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTaskAccess().getActionListAssignment_6()); }
		(rule__Task__ActionListAssignment_6)
		{ after(grammarAccess.getTaskAccess().getActionListAssignment_6()); }
	)
	(
		{ before(grammarAccess.getTaskAccess().getActionListAssignment_6()); }
		(rule__Task__ActionListAssignment_6)*
		{ after(grammarAccess.getTaskAccess().getActionListAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_4__0__Impl
	rule__Task__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTriggersKeyword_4_0()); }
	'Triggers:'
	{ after(grammarAccess.getTaskAccess().getTriggersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTaskAccess().getTriggerListAssignment_4_1()); }
		(rule__Task__TriggerListAssignment_4_1)
		{ after(grammarAccess.getTaskAccess().getTriggerListAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getTaskAccess().getTriggerListAssignment_4_1()); }
		(rule__Task__TriggerListAssignment_4_1)*
		{ after(grammarAccess.getTaskAccess().getTriggerListAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getMoveKeyword_0_0()); }
	'Move'
	{ after(grammarAccess.getActionAccess().getMoveKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__1__Impl
	rule__Action__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getMoveDirAssignment_0_1()); }
	(rule__Action__MoveDirAssignment_0_1)
	{ after(grammarAccess.getActionAccess().getMoveDirAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__2__Impl
	rule__Action__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_0_2()); }
	(rule__Action__Group_0_2__0)?
	{ after(grammarAccess.getActionAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_0_3()); }
	(rule__Action__Group_0_3__0)?
	{ after(grammarAccess.getActionAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__0__Impl
	rule__Action__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getForKeyword_0_2_0()); }
	'for'
	{ after(grammarAccess.getActionAccess().getForKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__1__Impl
	rule__Action__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDurationAssignment_0_2_1()); }
	(rule__Action__DurationAssignment_0_2_1)
	{ after(grammarAccess.getActionAccess().getDurationAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getMillisecKeyword_0_2_2()); }
	'millisec'
	{ after(grammarAccess.getActionAccess().getMillisecKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__0__Impl
	rule__Action__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAtKeyword_0_3_0()); }
	'at'
	{ after(grammarAccess.getActionAccess().getAtKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__1__Impl
	rule__Action__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSpeedAssignment_0_3_1()); }
	(rule__Action__SpeedAssignment_0_3_1)
	{ after(grammarAccess.getActionAccess().getSpeedAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSpeedKeyword_0_3_2()); }
	'speed'
	{ after(grammarAccess.getActionAccess().getSpeedKeyword_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTurnKeyword_1_0()); }
	'Turn'
	{ after(grammarAccess.getActionAccess().getTurnKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTurnDirAssignment_1_1()); }
	(rule__Action__TurnDirAssignment_1_1)
	{ after(grammarAccess.getActionAccess().getTurnDirAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAlternatives_1_2()); }
	(rule__Action__Alternatives_1_2)
	{ after(grammarAccess.getActionAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_2_0__0__Impl
	rule__Action__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDegrAssignment_1_2_0_0()); }
	(rule__Action__DegrAssignment_1_2_0_0)
	{ after(grammarAccess.getActionAccess().getDegrAssignment_1_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDegKeyword_1_2_0_1()); }
	'deg'
	{ after(grammarAccess.getActionAccess().getDegKeyword_1_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_2_1__0__Impl
	rule__Action__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getUntilKeyword_1_2_1_0()); }
	'until'
	{ after(grammarAccess.getActionAccess().getUntilKeyword_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getActionAccess().getTrigAssignment_1_2_1_1()); }
		(rule__Action__TrigAssignment_1_2_1_1)
		{ after(grammarAccess.getActionAccess().getTrigAssignment_1_2_1_1()); }
	)
	(
		{ before(grammarAccess.getActionAccess().getTrigAssignment_1_2_1_1()); }
		(rule__Action__TrigAssignment_1_2_1_1)*
		{ after(grammarAccess.getActionAccess().getTrigAssignment_1_2_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getArmKeyword_2_0()); }
	'Arm'
	{ after(grammarAccess.getActionAccess().getArmKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getOpAssignment_2_1()); }
	(rule__Action__OpAssignment_2_1)
	{ after(grammarAccess.getActionAccess().getOpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__0__Impl
	rule__Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getPlayKeyword_3_0()); }
	'Play'
	{ after(grammarAccess.getActionAccess().getPlayKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__1__Impl
	rule__Action__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSoundKeyword_3_1()); }
	'sound'
	{ after(grammarAccess.getActionAccess().getSoundKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSoundAssignment_3_2()); }
	(rule__Action__SoundAssignment_3_2)
	{ after(grammarAccess.getActionAccess().getSoundAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__0__Impl
	rule__Action__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getUpdateKeyword_4_0()); }
	'Update'
	{ after(grammarAccess.getActionAccess().getUpdateKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__1__Impl
	rule__Action__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getFlagAssignment_4_1()); }
	(rule__Action__FlagAssignment_4_1)
	{ after(grammarAccess.getActionAccess().getFlagAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__2__Impl
	rule__Action__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getToKeyword_4_2()); }
	'to'
	{ after(grammarAccess.getActionAccess().getToKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getBoolAssignment_4_3()); }
	(rule__Action__BoolAssignment_4_3)
	{ after(grammarAccess.getActionAccess().getBoolAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getBoolTypeAssignment_0()); }
	(rule__Trigger__BoolTypeAssignment_0)?
	{ after(grammarAccess.getTriggerAccess().getBoolTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getNegAssignment_1()); }
	(rule__Trigger__NegAssignment_1)?
	{ after(grammarAccess.getTriggerAccess().getNegAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getAlternatives_2()); }
	(rule__Trigger__Alternatives_2)
	{ after(grammarAccess.getTriggerAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1__0__Impl
	rule__Trigger__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getSensorAssignment_2_1_0()); }
	(rule__Trigger__SensorAssignment_2_1_0)
	{ after(grammarAccess.getTriggerAccess().getSensorAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getAlternatives_2_1_1()); }
	(rule__Trigger__Alternatives_2_1_1)
	{ after(grammarAccess.getTriggerAccess().getAlternatives_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_2_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_0__0__Impl
	rule__Trigger__Group_2_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getIsKeyword_2_1_1_0_0()); }
	'is'
	{ after(grammarAccess.getTriggerAccess().getIsKeyword_2_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getColorAssignment_2_1_1_0_1()); }
	(rule__Trigger__ColorAssignment_2_1_1_0_1)
	{ after(grammarAccess.getTriggerAccess().getColorAssignment_2_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_2_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_1__0__Impl
	rule__Trigger__Group_2_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getDistanceKeyword_2_1_1_1_0()); }
	'distance'
	{ after(grammarAccess.getTriggerAccess().getDistanceKeyword_2_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getDistAssignment_2_1_1_1_1()); }
	(rule__Trigger__DistAssignment_2_1_1_1_1)
	{ after(grammarAccess.getTriggerAccess().getDistAssignment_2_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_2_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_2__0__Impl
	rule__Trigger__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTouchingKeyword_2_1_1_2_0()); }
	'touching'
	{ after(grammarAccess.getTriggerAccess().getTouchingKeyword_2_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_2_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_2_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTouchingAssignment_2_1_1_2_1()); }
	(rule__Trigger__TouchingAssignment_2_1_1_2_1)
	{ after(grammarAccess.getTriggerAccess().getTouchingAssignment_2_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Distance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__0__Impl
	rule__Distance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getRangeBoolAssignment_0()); }
	(rule__Distance__RangeBoolAssignment_0)
	{ after(grammarAccess.getDistanceAccess().getRangeBoolAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__1__Impl
	rule__Distance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getThanKeyword_1()); }
	'than'
	{ after(grammarAccess.getDistanceAccess().getThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__2__Impl
	rule__Distance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getDistanceAssignment_2()); }
	(rule__Distance__DistanceAssignment_2)
	{ after(grammarAccess.getDistanceAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Distance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceAccess().getCmKeyword_3()); }
	'cm'
	{ after(grammarAccess.getDistanceAccess().getCmKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeKeyword_0()); }
	'Time:'
	{ after(grammarAccess.getTimeAccess().getTimeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getSecAssignment_1()); }
	(rule__Time__SecAssignment_1)
	{ after(grammarAccess.getTimeAccess().getSecAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getSecKeyword_2()); }
	'sec'
	{ after(grammarAccess.getTimeAccess().getSecKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Missions__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMissionsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Missions__MissionListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionsAccess().getMissionListMissionParserRuleCall_3_0()); }
		ruleMission
		{ after(grammarAccess.getMissionsAccess().getMissionListMissionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__FlagsListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getFlagsListFlagParserRuleCall_3_0()); }
		ruleFlag
		{ after(grammarAccess.getMissionAccess().getFlagsListFlagParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TaskListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTaskListTaskParserRuleCall_5_0()); }
		ruleTask
		{ after(grammarAccess.getMissionAccess().getTaskListTaskParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__GoalAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getGoalGoalParserRuleCall_7_0()); }
		ruleGoal
		{ after(grammarAccess.getMissionAccess().getGoalGoalParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__GoalEventsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getGoalEventsTriggerParserRuleCall_0_1_0()); }
		ruleTrigger
		{ after(grammarAccess.getGoalAccess().getGoalEventsTriggerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__TimeoutAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getTimeoutTimeParserRuleCall_1_0()); }
		ruleTime
		{ after(grammarAccess.getGoalAccess().getTimeoutTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__FinishActionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getFinishActionsActionParserRuleCall_2_1_0()); }
		ruleAction
		{ after(grammarAccess.getGoalAccess().getFinishActionsActionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__PrioAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getPrioINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getPrioINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TriggerListAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTriggerListTriggerParserRuleCall_4_1_0()); }
		ruleTrigger
		{ after(grammarAccess.getTaskAccess().getTriggerListTriggerParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ActionListAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getActionListActionParserRuleCall_6_0()); }
		ruleAction
		{ after(grammarAccess.getTaskAccess().getActionListActionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__MoveDirAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getMoveDirDirectionParserRuleCall_0_1_0()); }
		ruleDirection
		{ after(grammarAccess.getActionAccess().getMoveDirDirectionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DurationAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDurationINTTerminalRuleCall_0_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getActionAccess().getDurationINTTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SpeedAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSpeedSpeedParserRuleCall_0_3_1_0()); }
		ruleSpeed
		{ after(grammarAccess.getActionAccess().getSpeedSpeedParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TurnDirAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTurnDirDirectionParserRuleCall_1_1_0()); }
		ruleDirection
		{ after(grammarAccess.getActionAccess().getTurnDirDirectionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DegrAssignment_1_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDegrINTTerminalRuleCall_1_2_0_0_0()); }
		RULE_INT
		{ after(grammarAccess.getActionAccess().getDegrINTTerminalRuleCall_1_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TrigAssignment_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTrigTriggerParserRuleCall_1_2_1_1_0()); }
		ruleTrigger
		{ after(grammarAccess.getActionAccess().getTrigTriggerParserRuleCall_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__OpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getOpArmOpParserRuleCall_2_1_0()); }
		ruleArmOp
		{ after(grammarAccess.getActionAccess().getOpArmOpParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SoundAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSoundSoundParserRuleCall_3_2_0()); }
		ruleSound
		{ after(grammarAccess.getActionAccess().getSoundSoundParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__FlagAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getFlagFlagCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getActionAccess().getFlagFlagIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionAccess().getFlagFlagIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getActionAccess().getFlagFlagCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__BoolAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getBoolBoolParserRuleCall_4_3_0()); }
		ruleBool
		{ after(grammarAccess.getActionAccess().getBoolBoolParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__CentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getCentCentalizeKeyword_5_0()); }
		(
			{ before(grammarAccess.getActionAccess().getCentCentalizeKeyword_5_0()); }
			'Centalize'
			{ after(grammarAccess.getActionAccess().getCentCentalizeKeyword_5_0()); }
		)
		{ after(grammarAccess.getActionAccess().getCentCentalizeKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__BoolTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getBoolTypeBoolParserRuleCall_0_0()); }
		ruleBool
		{ after(grammarAccess.getTriggerAccess().getBoolTypeBoolParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__NegAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getNegNegationParserRuleCall_1_0()); }
		ruleNegation
		{ after(grammarAccess.getTriggerAccess().getNegNegationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__FlagAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getFlagFlagCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getTriggerAccess().getFlagFlagIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTriggerAccess().getFlagFlagIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getTriggerAccess().getFlagFlagCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__SensorAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getSensorSensorParserRuleCall_2_1_0_0()); }
		ruleSensor
		{ after(grammarAccess.getTriggerAccess().getSensorSensorParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ColorAssignment_2_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getColorColorParserRuleCall_2_1_1_0_1_0()); }
		ruleColor
		{ after(grammarAccess.getTriggerAccess().getColorColorParserRuleCall_2_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__DistAssignment_2_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getDistDistanceParserRuleCall_2_1_1_1_1_0()); }
		ruleDistance
		{ after(grammarAccess.getTriggerAccess().getDistDistanceParserRuleCall_2_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TouchingAssignment_2_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getTouchingBoolParserRuleCall_2_1_1_2_1_0()); }
		ruleBool
		{ after(grammarAccess.getTriggerAccess().getTouchingBoolParserRuleCall_2_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__RangeBoolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getRangeBoolBoolParserRuleCall_0_0()); }
		ruleBool
		{ after(grammarAccess.getDistanceAccess().getRangeBoolBoolParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getDistanceINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDistanceAccess().getDistanceINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flag__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlagAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getFlagAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__SecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getSecINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getSecINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__DirAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getDirDirectionValEnumRuleCall_0()); }
		ruleDirectionVal
		{ after(grammarAccess.getDirectionAccess().getDirDirectionValEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Speed__SpeedAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedAccess().getSpeedSpeedValEnumRuleCall_0()); }
		ruleSpeedVal
		{ after(grammarAccess.getSpeedAccess().getSpeedSpeedValEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArmOp__OpTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmOpAccess().getOpTypeArmOpTypeEnumRuleCall_0()); }
		ruleArmOpType
		{ after(grammarAccess.getArmOpAccess().getOpTypeArmOpTypeEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__SoundNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getSoundNameSoundNameEnumRuleCall_0()); }
		ruleSoundName
		{ after(grammarAccess.getSoundAccess().getSoundNameSoundNameEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SensorTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensorTypeSensorTypeEnumRuleCall_0()); }
		ruleSensorType
		{ after(grammarAccess.getSensorAccess().getSensorTypeSensorTypeEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__ColorNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getColorNameColorNameEnumRuleCall_0()); }
		ruleColorName
		{ after(grammarAccess.getColorAccess().getColorNameColorNameEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__BoolTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getBoolTypeBoolTypeEnumRuleCall_0()); }
		ruleBoolType
		{ after(grammarAccess.getBoolAccess().getBoolTypeBoolTypeEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__NOTAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getNOTNotKeyword_0()); }
		(
			{ before(grammarAccess.getNegationAccess().getNOTNotKeyword_0()); }
			'not'
			{ after(grammarAccess.getNegationAccess().getNOTNotKeyword_0()); }
		)
		{ after(grammarAccess.getNegationAccess().getNOTNotKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
