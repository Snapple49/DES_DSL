/*
 * generated by Xtext 2.10.0
 */
grammar InternalRobotDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package des.missionrobot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package des.missionrobot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import des.missionrobot.services.RobotDSLGrammarAccess;

}
@parser::members {
	private RobotDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(RobotDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMissionList
entryRuleMissionList
:
{ before(grammarAccess.getMissionListRule()); }
	 ruleMissionList
{ after(grammarAccess.getMissionListRule()); } 
	 EOF 
;

// Rule MissionList
ruleMissionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getMissionListAccess().getMissionListAssignment()); }
			(rule__MissionList__MissionListAssignment)
			{ after(grammarAccess.getMissionListAccess().getMissionListAssignment()); }
		)
		(
			{ before(grammarAccess.getMissionListAccess().getMissionListAssignment()); }
			(rule__MissionList__MissionListAssignment)*
			{ after(grammarAccess.getMissionListAccess().getMissionListAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMission
entryRuleMission
:
{ before(grammarAccess.getMissionRule()); }
	 ruleMission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule Mission
ruleMission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehavior
entryRuleBehavior
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorAccess().getGroup()); }
		(rule__Behavior__Group__0)
		{ after(grammarAccess.getBehaviorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReaction
entryRuleReaction
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionAccess().getGroup()); }
		(rule__Reaction__Group__0)
		{ after(grammarAccess.getReactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Direction
ruleDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
		(rule__Direction__Alternatives)
		{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Speed
ruleSpeed
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedAccess().getAlternatives()); }
		(rule__Speed__Alternatives)
		{ after(grammarAccess.getSpeedAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArmOp
ruleArmOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmOpAccess().getAlternatives()); }
		(rule__ArmOp__Alternatives)
		{ after(grammarAccess.getArmOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Sound
ruleSound
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getAlternatives()); }
		(rule__Sound__Alternatives)
		{ after(grammarAccess.getSoundAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Sensor
ruleSensor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getAlternatives()); }
		(rule__Sensor__Alternatives)
		{ after(grammarAccess.getSensorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Color
ruleColor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Bool
ruleBool
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getAlternatives()); }
		(rule__Bool__Alternatives)
		{ after(grammarAccess.getBoolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Repeat
ruleRepeat
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatAccess().getAlternatives()); }
		(rule__Repeat__Alternatives)
		{ after(grammarAccess.getRepeatAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_0()); }
		(rule__Action__Group_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1()); }
		(rule__Action__Group_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_2()); }
		(rule__Action__Group_2__0)
		{ after(grammarAccess.getActionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_3()); }
		(rule__Action__Group_3__0)
		{ after(grammarAccess.getActionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_3_0()); }
		(rule__Trigger__Group_3_0__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_3_1()); }
		(rule__Trigger__Group_3_1__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getFORWARDEnumLiteralDeclaration_0()); }
		('forward')
		{ after(grammarAccess.getDirectionAccess().getFORWARDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getBACKWARDEnumLiteralDeclaration_1()); }
		('backward')
		{ after(grammarAccess.getDirectionAccess().getBACKWARDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getLEFTEnumLiteralDeclaration_2()); }
		('left')
		{ after(grammarAccess.getDirectionAccess().getLEFTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getRIGHTEnumLiteralDeclaration_3()); }
		('right')
		{ after(grammarAccess.getDirectionAccess().getRIGHTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Speed__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeedAccess().getHIGHEnumLiteralDeclaration_0()); }
		('high')
		{ after(grammarAccess.getSpeedAccess().getHIGHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpeedAccess().getMEDEnumLiteralDeclaration_1()); }
		('medium')
		{ after(grammarAccess.getSpeedAccess().getMEDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpeedAccess().getLOWEnumLiteralDeclaration_2()); }
		('low')
		{ after(grammarAccess.getSpeedAccess().getLOWEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArmOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmOpAccess().getUPEnumLiteralDeclaration_0()); }
		('raise')
		{ after(grammarAccess.getArmOpAccess().getUPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArmOpAccess().getDOWNEnumLiteralDeclaration_1()); }
		('lower')
		{ after(grammarAccess.getArmOpAccess().getDOWNEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getBuzzEnumLiteralDeclaration_0()); }
		('buzz')
		{ after(grammarAccess.getSoundAccess().getBuzzEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSoundAccess().getFanfareEnumLiteralDeclaration_1()); }
		('fanfare')
		{ after(grammarAccess.getSoundAccess().getFanfareEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getCOLOREnumLiteralDeclaration_0()); }
		('Color')
		{ after(grammarAccess.getSensorAccess().getCOLOREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getLEFTLIGHTEnumLiteralDeclaration_1()); }
		('LeftLight')
		{ after(grammarAccess.getSensorAccess().getLEFTLIGHTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getRIGHTLIGHTEnumLiteralDeclaration_2()); }
		('RightLight')
		{ after(grammarAccess.getSensorAccess().getRIGHTLIGHTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getBACKUSEnumLiteralDeclaration_3()); }
		('RearHeight')
		{ after(grammarAccess.getSensorAccess().getBACKUSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getFRONTUSEnumLiteralDeclaration_4()); }
		('FrontDistance')
		{ after(grammarAccess.getSensorAccess().getFRONTUSEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getREDEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getColorAccess().getREDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getWHITEEnumLiteralDeclaration_1()); }
		('white')
		{ after(grammarAccess.getColorAccess().getWHITEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getLEnumLiteralDeclaration_0()); }
		('less')
		{ after(grammarAccess.getBoolAccess().getLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAccess().getGEnumLiteralDeclaration_1()); }
		('greater')
		{ after(grammarAccess.getBoolAccess().getGEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAccess().getANDEnumLiteralDeclaration_2()); }
		('and')
		{ after(grammarAccess.getBoolAccess().getANDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAccess().getOREnumLiteralDeclaration_3()); }
		('or')
		{ after(grammarAccess.getBoolAccess().getOREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatAccess().getONCEEnumLiteralDeclaration_0()); }
		('once')
		{ after(grammarAccess.getRepeatAccess().getONCEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRepeatAccess().getREPEATEnumLiteralDeclaration_1()); }
		('repeatable')
		{ after(grammarAccess.getRepeatAccess().getREPEATEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
	'Mission'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getNameAssignment_1()); }
	(rule__Mission__NameAssignment_1)
	{ after(grammarAccess.getMissionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getBehaviorsKeyword_2()); }
	'Behaviors:'
	{ after(grammarAccess.getMissionAccess().getBehaviorsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
	rule__Mission__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorListAssignment_3()); }
		(rule__Mission__BehaviorListAssignment_3)
		{ after(grammarAccess.getMissionAccess().getBehaviorListAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorListAssignment_3()); }
		(rule__Mission__BehaviorListAssignment_3)*
		{ after(grammarAccess.getMissionAccess().getBehaviorListAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__4__Impl
	rule__Mission__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGoalKeyword_4()); }
	'Goal:'
	{ after(grammarAccess.getMissionAccess().getGoalKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGoalEventsAssignment_5()); }
	(rule__Mission__GoalEventsAssignment_5)
	{ after(grammarAccess.getMissionAccess().getGoalEventsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getBehaviorKeyword_0()); }
	'Behavior:'
	{ after(grammarAccess.getBehaviorAccess().getBehaviorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getNameAssignment_1()); }
	(rule__Behavior__NameAssignment_1)
	{ after(grammarAccess.getBehaviorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__2__Impl
	rule__Behavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getPriorityKeyword_2()); }
	'priority:'
	{ after(grammarAccess.getBehaviorAccess().getPriorityKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__3__Impl
	rule__Behavior__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getPrioAssignment_3()); }
	(rule__Behavior__PrioAssignment_3)
	{ after(grammarAccess.getBehaviorAccess().getPrioAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__4__Impl
	rule__Behavior__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getGroup_4()); }
	(rule__Behavior__Group_4__0)?
	{ after(grammarAccess.getBehaviorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getGroup_5()); }
	(rule__Behavior__Group_5__0)?
	{ after(grammarAccess.getBehaviorAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4__0__Impl
	rule__Behavior__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getGroup_4_0()); }
	(rule__Behavior__Group_4_0__0)
	{ after(grammarAccess.getBehaviorAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getGroup_4_1()); }
	(rule__Behavior__Group_4_1__0)?
	{ after(grammarAccess.getBehaviorAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4_0__0__Impl
	rule__Behavior__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getTriggersKeyword_4_0_0()); }
	'Triggers:'
	{ after(grammarAccess.getBehaviorAccess().getTriggersKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorAccess().getTriggerListAssignment_4_0_1()); }
		(rule__Behavior__TriggerListAssignment_4_0_1)
		{ after(grammarAccess.getBehaviorAccess().getTriggerListAssignment_4_0_1()); }
	)
	(
		{ before(grammarAccess.getBehaviorAccess().getTriggerListAssignment_4_0_1()); }
		(rule__Behavior__TriggerListAssignment_4_0_1)*
		{ after(grammarAccess.getBehaviorAccess().getTriggerListAssignment_4_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4_1__0__Impl
	rule__Behavior__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getReactionsKeyword_4_1_0()); }
	'Reactions:'
	{ after(grammarAccess.getBehaviorAccess().getReactionsKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorAccess().getReactionListAssignment_4_1_1()); }
		(rule__Behavior__ReactionListAssignment_4_1_1)
		{ after(grammarAccess.getBehaviorAccess().getReactionListAssignment_4_1_1()); }
	)
	(
		{ before(grammarAccess.getBehaviorAccess().getReactionListAssignment_4_1_1()); }
		(rule__Behavior__ReactionListAssignment_4_1_1)*
		{ after(grammarAccess.getBehaviorAccess().getReactionListAssignment_4_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_5__0__Impl
	rule__Behavior__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorAccess().getActionsKeyword_5_0()); }
	'Actions:'
	{ after(grammarAccess.getBehaviorAccess().getActionsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Behavior__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorAccess().getActionListAssignment_5_1()); }
		(rule__Behavior__ActionListAssignment_5_1)
		{ after(grammarAccess.getBehaviorAccess().getActionListAssignment_5_1()); }
	)
	(
		{ before(grammarAccess.getBehaviorAccess().getActionListAssignment_5_1()); }
		(rule__Behavior__ActionListAssignment_5_1)*
		{ after(grammarAccess.getBehaviorAccess().getActionListAssignment_5_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getMoveKeyword_0_0()); }
	'Move'
	{ after(grammarAccess.getActionAccess().getMoveKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__1__Impl
	rule__Action__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDirAssignment_0_1()); }
	(rule__Action__DirAssignment_0_1)
	{ after(grammarAccess.getActionAccess().getDirAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__2__Impl
	rule__Action__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_0_2()); }
	(rule__Action__Group_0_2__0)?
	{ after(grammarAccess.getActionAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_0_3()); }
	(rule__Action__Group_0_3__0)?
	{ after(grammarAccess.getActionAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__0__Impl
	rule__Action__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getForKeyword_0_2_0()); }
	'for'
	{ after(grammarAccess.getActionAccess().getForKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__1__Impl
	rule__Action__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDurationAssignment_0_2_1()); }
	(rule__Action__DurationAssignment_0_2_1)
	{ after(grammarAccess.getActionAccess().getDurationAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSecKeyword_0_2_2()); }
	'sec'
	{ after(grammarAccess.getActionAccess().getSecKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__0__Impl
	rule__Action__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAtKeyword_0_3_0()); }
	'at'
	{ after(grammarAccess.getActionAccess().getAtKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__1__Impl
	rule__Action__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSpeedAssignment_0_3_1()); }
	(rule__Action__SpeedAssignment_0_3_1)
	{ after(grammarAccess.getActionAccess().getSpeedAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSpeedKeyword_0_3_2()); }
	'speed'
	{ after(grammarAccess.getActionAccess().getSpeedKeyword_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTurnKeyword_1_0()); }
	'Turn'
	{ after(grammarAccess.getActionAccess().getTurnKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDirAssignment_1_1()); }
	(rule__Action__DirAssignment_1_1)
	{ after(grammarAccess.getActionAccess().getDirAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__2__Impl
	rule__Action__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDegrAssignment_1_2()); }
	(rule__Action__DegrAssignment_1_2)
	{ after(grammarAccess.getActionAccess().getDegrAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDegKeyword_1_3()); }
	'deg'
	{ after(grammarAccess.getActionAccess().getDegKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getArmKeyword_2_0()); }
	'Arm'
	{ after(grammarAccess.getActionAccess().getArmKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getOpAssignment_2_1()); }
	(rule__Action__OpAssignment_2_1)
	{ after(grammarAccess.getActionAccess().getOpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__0__Impl
	rule__Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getPlayKeyword_3_0()); }
	'Play'
	{ after(grammarAccess.getActionAccess().getPlayKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__1__Impl
	rule__Action__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSoundKeyword_3_1()); }
	'sound'
	{ after(grammarAccess.getActionAccess().getSoundKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSoundAssignment_3_2()); }
	(rule__Action__SoundAssignment_3_2)
	{ after(grammarAccess.getActionAccess().getSoundAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__0__Impl
	rule__Reaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getReactionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__1__Impl
	rule__Reaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getEventAssignment_1()); }
	(rule__Reaction__EventAssignment_1)
	{ after(grammarAccess.getReactionAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__2__Impl
	rule__Reaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getTriggeredKeyword_2()); }
	'triggered'
	{ after(grammarAccess.getReactionAccess().getTriggeredKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__3__Impl
	rule__Reaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getDoKeyword_3()); }
	'Do:'
	{ after(grammarAccess.getReactionAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReactionAccess().getReactionsAssignment_4()); }
		(rule__Reaction__ReactionsAssignment_4)
		{ after(grammarAccess.getReactionAccess().getReactionsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getReactionAccess().getReactionsAssignment_4()); }
		(rule__Reaction__ReactionsAssignment_4)*
		{ after(grammarAccess.getReactionAccess().getReactionsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getBoolTypeAssignment_0()); }
	(rule__Trigger__BoolTypeAssignment_0)?
	{ after(grammarAccess.getTriggerAccess().getBoolTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getEventAssignment_1()); }
	(rule__Trigger__EventAssignment_1)?
	{ after(grammarAccess.getTriggerAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__2__Impl
	rule__Trigger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getSensorAssignment_2()); }
	(rule__Trigger__SensorAssignment_2)
	{ after(grammarAccess.getTriggerAccess().getSensorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getAlternatives_3()); }
	(rule__Trigger__Alternatives_3)
	{ after(grammarAccess.getTriggerAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_0__0__Impl
	rule__Trigger__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getIsKeyword_3_0_0()); }
	'is'
	{ after(grammarAccess.getTriggerAccess().getIsKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getColorAssignment_3_0_1()); }
	(rule__Trigger__ColorAssignment_3_0_1)
	{ after(grammarAccess.getTriggerAccess().getColorAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_1__0__Impl
	rule__Trigger__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getDistanceKeyword_3_1_0()); }
	'distance'
	{ after(grammarAccess.getTriggerAccess().getDistanceKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_1__1__Impl
	rule__Trigger__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getBoolAssignment_3_1_1()); }
	(rule__Trigger__BoolAssignment_3_1_1)
	{ after(grammarAccess.getTriggerAccess().getBoolAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_1__2__Impl
	rule__Trigger__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getThanKeyword_3_1_2()); }
	'than'
	{ after(grammarAccess.getTriggerAccess().getThanKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_1__3__Impl
	rule__Trigger__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getDistanceAssignment_3_1_3()); }
	(rule__Trigger__DistanceAssignment_3_1_3)
	{ after(grammarAccess.getTriggerAccess().getDistanceAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getCmKeyword_3_1_4()); }
	'cm'
	{ after(grammarAccess.getTriggerAccess().getCmKeyword_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionList__MissionListAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionListAccess().getMissionListMissionParserRuleCall_0()); }
		ruleMission
		{ after(grammarAccess.getMissionListAccess().getMissionListMissionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__BehaviorListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getBehaviorListBehaviorParserRuleCall_3_0()); }
		ruleBehavior
		{ after(grammarAccess.getMissionAccess().getBehaviorListBehaviorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__GoalEventsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getGoalEventsEventCrossReference_5_0()); }
		(
			{ before(grammarAccess.getMissionAccess().getGoalEventsEventIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMissionAccess().getGoalEventsEventIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getMissionAccess().getGoalEventsEventCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__PrioAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getPrioINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getBehaviorAccess().getPrioINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__TriggerListAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getTriggerListTriggerParserRuleCall_4_0_1_0()); }
		ruleTrigger
		{ after(grammarAccess.getBehaviorAccess().getTriggerListTriggerParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__ReactionListAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getReactionListReactionParserRuleCall_4_1_1_0()); }
		ruleReaction
		{ after(grammarAccess.getBehaviorAccess().getReactionListReactionParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__ActionListAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorAccess().getActionListActionParserRuleCall_5_1_0()); }
		ruleAction
		{ after(grammarAccess.getBehaviorAccess().getActionListActionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DirAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDirDirectionEnumRuleCall_0_1_0()); }
		ruleDirection
		{ after(grammarAccess.getActionAccess().getDirDirectionEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DurationAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDurationINTTerminalRuleCall_0_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getActionAccess().getDurationINTTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SpeedAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSpeedSpeedEnumRuleCall_0_3_1_0()); }
		ruleSpeed
		{ after(grammarAccess.getActionAccess().getSpeedSpeedEnumRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DirAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDirDirectionEnumRuleCall_1_1_0()); }
		ruleDirection
		{ after(grammarAccess.getActionAccess().getDirDirectionEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DegrAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDegrINTTerminalRuleCall_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getActionAccess().getDegrINTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__OpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getOpArmOpEnumRuleCall_2_1_0()); }
		ruleArmOp
		{ after(grammarAccess.getActionAccess().getOpArmOpEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SoundAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSoundSoundEnumRuleCall_3_2_0()); }
		ruleSound
		{ after(grammarAccess.getActionAccess().getSoundSoundEnumRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getEventEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getReactionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReactionAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getReactionAccess().getEventEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__ReactionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getReactionsActionParserRuleCall_4_0()); }
		ruleAction
		{ after(grammarAccess.getReactionAccess().getReactionsActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__BoolTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getBoolTypeBoolEnumRuleCall_0_0()); }
		ruleBool
		{ after(grammarAccess.getTriggerAccess().getBoolTypeBoolEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getEventEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTriggerAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTriggerAccess().getEventEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTriggerAccess().getEventEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__SensorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getSensorSensorEnumRuleCall_2_0()); }
		ruleSensor
		{ after(grammarAccess.getTriggerAccess().getSensorSensorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ColorAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getColorColorEnumRuleCall_3_0_1_0()); }
		ruleColor
		{ after(grammarAccess.getTriggerAccess().getColorColorEnumRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__BoolAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getBoolBoolEnumRuleCall_3_1_1_0()); }
		ruleBool
		{ after(grammarAccess.getTriggerAccess().getBoolBoolEnumRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__DistanceAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getDistanceINTTerminalRuleCall_3_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTriggerAccess().getDistanceINTTerminalRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
