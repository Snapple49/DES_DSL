/**
 * generated by Xtext 2.10.0
 */
package des.missionrobot.validation;

import des.missionrobot.robotDSL.Mission;
import des.missionrobot.robotDSL.RobotDSLPackage;
import des.missionrobot.robotDSL.Task;
import des.missionrobot.validation.AbstractRobotDSLValidator;
import des.missionrobot.validation.Auxiliary;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class RobotDSLValidator extends AbstractRobotDSLValidator {
  @Check
  public void checkPriorityCorrect(final Mission m) {
    EList<Task> _taskList = m.getTaskList();
    boolean _hasDuplicates = Auxiliary.hasDuplicates(_taskList);
    if (_hasDuplicates) {
      this.warning("Priority should be unique", RobotDSLPackage.Literals.TASK__PRIO);
    }
  }
}
