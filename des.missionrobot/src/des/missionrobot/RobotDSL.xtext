grammar des.missionrobot.RobotDSL with org.eclipse.xtext.common.Terminals

generate robotDSL "http://www.missionrobot.des/RobotDSL"


Missions: 
	'Missionset' name = ID
	'Missions:' missionList += Mission+
;

Mission:
	'Mission' name = ID
	'Flags:' flagsList += Flag*
	'Tasks:' taskList += Task+
	'Goal:' goal = Goal
;

Goal:
	('Condition:'goalEvents += Trigger+)? (timeout = Time)? ('Actions:' finishActions += Action+)?
;

Task:
	'Task:' name = ID
	'priority:' prio = INT
	('Triggers:' triggerList += Trigger+)?
	'Actions:' actionList += Action+
;


Action: 
	'Move' moveDir = Direction ('for' duration = INT 'millisec')? ('at' speed = Speed 'speed' )? | 
	'Turn' turnDir = Direction (degr = INT 'deg' | 'until' trig += Trigger+) |
	'Arm' op = ArmOp |
	'Play' 'sound' sound = Sound |
	'Update' flag = [Flag] 'to' bool = Bool |
	cent = 'Centalize'
;

Trigger: 
	(boolType = Bool)? 
	((neg = Negation)? flag = [Flag] |
	sensor = Sensor
	(('is' color = Color) | ('distance' dist = Distance ) | ('touching' touching = Bool)))
;

Distance:
	rangeBool = Bool 'than' distance = INT 'cm'
;

Flag:
	name = ID
;

Time:
	'Time:' sec = INT 'sec'
;

Direction:
	dir = DirectionVal
;

enum DirectionVal:
	FORWARD = 'forward' |
	BACKWARD = 'backward' |
	LEFT = 	'left' |
	RIGHT = 'right'
;

Speed:
	speed = SpeedVal
;

enum SpeedVal:
	HIGH = 'high' |
	MED = 'medium' |
	LOW = 'low'
;

ArmOp:
	opType = ArmOpType
;

enum ArmOpType:
	UP = 'raise' |
	DOWN = 'lower'
;

Sound:
	soundName = SoundName
;

enum SoundName:
	BUZZ = 'buzz' |
	FANFARE = 'fanfare'
;

Sensor:
	sensorType = SensorType
;

enum SensorType:
	COLOR = 'Color' |
	LEFTLIGHT = 'LeftLight' |
	RIGHTLIGHT = 'RightLight' |
	BACKUS = 'RearHeight' |
	FRONTUS = 'FrontDistance' |
	LEFTTOUCH = 'LeftTouch' |
	RIGHTTOUCH = 'RightTouch' |
	GYRO = 'Gyro'
;

Color:
	colorName = ColorName
;

enum ColorName:
	RED = 'red' |
	WHITE = 'white' |
	BLACK = 'black' |
	GREEN = 'green' |
	BLUE = 'blue' 
;

Bool:
	boolType = BoolType
;

enum BoolType:
	L = 'less' |
	G = 'greater' |
	AND = 'and' |
	OR = 'or' |
	TRUE = 'true' |
	FALSE = 'false'
;

Negation:
	NOT = 'not'
;
