grammar des.missionrobot.RobotDSL with org.eclipse.xtext.common.Terminals

generate robotDSL "http://www.missionrobot.des/RobotDSL"
MissionList:
	missionList += Mission+
;

Mission:
	'Mission' name = ID
	'Behaviors:' behaviorList += Behavior+
	'Goal:' goalEvents += Event+
;

Behavior:
	'Behavior:' name = ID
	'priority:' prio = INT
	(('Triggers:' (triggerList += Trigger+) | flag = [Flag] 'is' bool = Bool )
	('Reactions:' reactionList += Reaction+)?)?
	('Actions:' actionList += Action+)?
;


Action: 
	'Move' dir = Direction ('for' duration = INT 'sec')? ('at' speed = Speed 'speed' )? | 
	'Turn' dir = Direction degr = INT 'deg' |
	'Arm' op = ArmOp |
	'Play' 'sound' sound = Sound |
	'Update' flag = Flag 'to' bool = Bool
;

Reaction:
	'if' trig = [Trigger] 'triggered' 'Do:' reactions += Action+
;

Event:
	('Event:' name = ID 
	(repeat = Repeat)?) |
	'Time:' time = INT 'minutes'
;

Trigger: 
	(boolType = Bool)? 
	name = ID
	sensor = Sensor
	(('is' color = Color) | ('distance' bool = Bool 'than' distance = INT 'cm' ))
;

Flag:
	'Flag' name = ID 'is' bool = Bool
;

enum Direction:
	FORWARD = 'forward' |
	BACKWARD = 'backward' |
	LEFT = 	'left' |
	RIGHT = 'right'
;

enum Speed:
	HIGH = 'high' |
	MED = 'medium' |
	LOW = 'low'
;
enum ArmOp:
	UP = 'raise' |
	DOWN = 'lower'
;

enum Sound:
	buzz = 'buzz' |
	fanfare = 'fanfare'
;


enum Sensor:
	COLOR = 'Color' |
	LEFTLIGHT = 'LeftLight' |
	RIGHTLIGHT = 'RightLight' |
	BACKUS = 'RearHeight' |
	FRONTUS = 'FrontDistance'
	
;

enum Color:
	RED = 'red' |
	WHITE = 'white'
;

enum Bool:
	L = 'less' |
	G = 'greater' |
	AND = 'and' |
	OR = 'or' |
	TRUE = 'true' |
	FALSE = 'false'
;

enum Repeat:
	ONCE = 'once' |
	REPEAT = 'repeatable'
;
